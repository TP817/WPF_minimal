<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpfs="clr-namespace:WPFDevelopers.Minimal.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Basic/ControlBasic.xaml"/>
        <ResourceDictionary Source="../Themes/Basic/Animations.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border x:Name="PART_Border" 
                Padding="6,0"
                BorderThickness="0"
                SnapsToDevicePixels="true">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.Column="1"
                           Cursor="Hand" Fill="Transparent" Height="Auto" Width="30"/>
                <Path x:Name="PART_Arrow" Grid.Column="1" Stretch="Fill" 
                  Height="6" Width="10"  HorizontalAlignment="Center" 
                  VerticalAlignment="Center" Cursor="Hand"
                  Data="{StaticResource PathComboBoxToggleButton}" 
                  RenderTransformOrigin=".5,.5">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource PlaceholderTextColor}"/>
                    </Path.Fill>
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>

            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" 
                                             To="-180" Duration="00:00:.3"
                                             EasingFunction="{StaticResource ExponentialEaseOut}"/>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" 
                                             To="0" Duration="00:00:.3" EasingFunction="{StaticResource ExponentialEaseOut}"/>

                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>

    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlBasicStyle}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="{StaticResource MinHeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OpenStoryboard">
                            <DoubleAnimation Storyboard.TargetName="PART_DropDown"
                                                         Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" 
                                                         To="1" Duration="00:00:.2"
                                                         EasingFunction="{StaticResource ExponentialEaseOut}"/>
                        </Storyboard>
                        <Storyboard x:Key="CloseStoryboard">
                            <DoubleAnimation Storyboard.TargetName="PART_DropDown"
                                                         Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" 
                                                         To="0" Duration="00:00:.2"
                                                         EasingFunction="{StaticResource ExponentialEaseOut}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_Border" 
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        EasingFunction="{StaticResource ExponentialEaseOut}"
                                                        Duration="00:00:.1"
                                                        To="{DynamicResource PrimaryMouseOverColor}"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable"/>
                                <VisualState x:Name="Uneditable"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="PART_ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Style="{x:Null}"
                        Grid.Column="2"
                        Focusable="False"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="4,3,30,3">
                        </ContentPresenter>
                        <!--<TextBox x:Name="PART_EditableTextBox"  
                                 HorizontalAlignment="Left"
                                 Margin="2,3,30,3"
                                 Focusable="True"
                                 Background="Transparent" 
                                 Visibility="Hidden"  
                                 Text="{TemplateBinding ComboBox.SelectionBoxItem}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />-->
                        <TextBox x:Name="PART_EditableTextBox" 
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,30,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <!--SelectionBrush="{DynamicResource PrimaryNormalSolidColorBrush}"/>-->
                        <Popup x:Name="PART_Popup" 
                               MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                               MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"    
                               Placement="Bottom" StaysOpen="False">
                            <Grid x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  Margin="24,2,24,24"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                  RenderTransformOrigin=".5,0"
                                  SnapsToDevicePixels="True">
                                <Grid.RenderTransform>
                                    <ScaleTransform ScaleY="0"/>
                                </Grid.RenderTransform>
                                <Border Background="{DynamicResource WhiteSolidColorBrush}" 
                                        CornerRadius="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" 
                                        SnapsToDevicePixels="True" 
                                        UseLayoutRounding="True"
                                        Effect="{StaticResource PopupShadowDepth}"/>

                                <Border  Name="PART_DropDownBorder" Background="{DynamicResource WhiteSolidColorBrush}"
                                            BorderBrush="{DynamicResource BaseSolidColorBrush}"
                                            BorderThickness="1" CornerRadius="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                         SnapsToDevicePixels="True" UseLayoutRounding="True" />
                                <ScrollViewer Padding="0,8" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>

                            </Grid>
                        </Popup>
                        <Border x:Name="PART_Border"
                                CornerRadius="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{DynamicResource BaseSolidColorBrush}"
                                BorderThickness="1"  SnapsToDevicePixels="True"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems"  Value="False">
                            <Setter TargetName="PART_DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="PART_DropDownBorder" Property="CornerRadius" Value="{Binding Path=(wpfs:ElementHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_DropDownBorder"  Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource ControlBasicStyle}">
        <Setter Property="Padding" Value="20,0"/>
        <Setter Property="Height" Value="34" />
        <Setter Property="Margin" Value="1,0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_ContentPresenter" 
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        EasingFunction="{StaticResource ExponentialEaseOut}"
                                                        To="{DynamicResource RegularTextColor}"
                                                        Duration="00:00:.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_RectangleSelected" 
                                                        Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                                        EasingFunction="{StaticResource ExponentialEaseOut}"
                                                        To="{DynamicResource BaseColor}"
                                                        Duration="00:00:.3"/>
                                        <ColorAnimation Storyboard.TargetName="PART_ContentPresenter" 
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        EasingFunction="{StaticResource ExponentialEaseOut}"
                                                        To="{DynamicResource PrimaryPressedColor}"
                                                        Duration="00:00:.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
                        <Rectangle x:Name="PART_RectangleMouseOver" 
                                   Fill="{StaticResource WhiteSolidColorBrush}"
                                   SnapsToDevicePixels="True" UseLayoutRounding="True"/>

                        <Rectangle x:Name="PART_RectangleSelected"
                            Fill="{StaticResource BaseSolidColorBrush}"
                            Visibility="Collapsed"
                            SnapsToDevicePixels="True" UseLayoutRounding="True"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          x:Name="PART_ContentPresenter" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{DynamicResource RegularTextSolidColorBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource BaseSolidColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource BaseSolidColorBrush}"/>
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource PrimaryNormalSolidColorBrush}"/>
                            <Setter TargetName="PART_RectangleMouseOver" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_RectangleSelected" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource BaseSolidColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>